{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lucas\\\\Desktop\\\\Debora\\\\desafios\\\\front-modulo3\\\\src\\\\componetes\\\\TransitionsList\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport editIcon from '../../assests/lapis.svg';\nimport deleteIcon from '../../assests/lixeira.svg';\nimport HeaderList from './HeaderList';\nimport './style.css';\nimport { formate, formatDate, formarterWord } from '../../utils/formater';\nimport ModalDelete from '../ConfirmDelete';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction List(_ref) {\n  _s();\n\n  let {\n    transactions,\n    setCurrentUser,\n    setReload,\n    reload\n  } = _ref;\n  const [idDelete, setIdDelete] = useState(null);\n\n  async function handleDelete() {\n    await fetch(`http://localhost:3333/transactions/${idDelete}`, {\n      method: 'DELETE'\n    });\n    setIdDelete(null);\n    setReload(!reload);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table\",\n    children: [/*#__PURE__*/_jsxDEV(HeaderList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 32\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-body\",\n      children: transactions.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"table-line\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"line-items\",\n          children: formatDate(item.date)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"line-items\",\n          children: formarterWord(item.week_day)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"line-items\",\n          children: item.category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"line-items value-font\",\n          style: {\n            color: item.type === 'credit' ? ' #7B61FF' : '#FA8C10'\n          },\n          children: formate(item.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"line-items\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: editIcon,\n          className: \"button-action\",\n          onClick: () => setCurrentUser(item)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: deleteIcon,\n          className: \"button-action\",\n          onClick: () => setIdDelete(item.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ModalDelete, {\n          show: item.id === idDelete,\n          setShow: () => setIdDelete(null),\n          message: \"Apagar item?\",\n          handleConfirm: () => handleDelete()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(List, \"Li70HC9omIVKXN5mXodqvAqS7Qo=\");\n\n_c = List;\n;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["C:/Users/Lucas/Desktop/Debora/desafios/front-modulo3/src/componetes/TransitionsList/index.js"],"names":["editIcon","deleteIcon","HeaderList","formate","formatDate","formarterWord","ModalDelete","useState","List","transactions","setCurrentUser","setReload","reload","idDelete","setIdDelete","handleDelete","fetch","method","map","item","date","week_day","category","color","type","value","id"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,yBAArB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAO,aAAP;AACA,SAASC,OAAT,EAAkBC,UAAlB,EAA8BC,aAA9B,QAAmD,sBAAnD;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAKA,SAASC,IAAT,OAAmE;AAAA;;AAAA,MAArD;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,cAAhB;AAAgCC,IAAAA,SAAhC;AAA2CC,IAAAA;AAA3C,GAAqD;AAE/D,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,IAAD,CAAxC;;AAEA,iBAAeQ,YAAf,GAA8B;AAC1B,UAAMC,KAAK,CAAE,sCAAqCH,QAAS,EAAhD,EAAmD;AAC1DI,MAAAA,MAAM,EAAE;AADkD,KAAnD,CAAX;AAGAH,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAH,IAAAA,SAAS,CAAC,CAACC,MAAF,CAAT;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BAAuB,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAAvB,eACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBACKH,YAAY,CAACS,GAAb,CAAkBC,IAAD,iBACd;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,oBAA6Bf,UAAU,CAACe,IAAI,CAACC,IAAN;AAAvC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,oBAA6Bf,aAAa,CAACc,IAAI,CAACE,QAAN;AAA1C;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,oBAA6BF,IAAI,CAACG;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AACI,UAAA,SAAS,EAAC,uBADd;AAEI,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAEJ,IAAI,CAACK,IAAL,KAAc,QAAd,GAAyB,UAAzB,GAAsC;AAA/C,WAFX;AAAA,oBAIKrB,OAAO,CAACgB,IAAI,CAACM,KAAN;AAJZ;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAWI;AAAK,UAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,gBAXJ,eAYI;AAAK,UAAA,GAAG,EAAEzB,QAAV;AAAoB,UAAA,SAAS,EAAC,eAA9B;AACI,UAAA,OAAO,EAAE,MAAMU,cAAc,CAACS,IAAD;AADjC;AAAA;AAAA;AAAA;AAAA,gBAZJ,eAeI;AAAK,UAAA,GAAG,EAAElB,UAAV;AAAsB,UAAA,SAAS,EAAC,eAAhC;AACI,UAAA,OAAO,EAAE,MAAMa,WAAW,CAACK,IAAI,CAACO,EAAN;AAD9B;AAAA;AAAA;AAAA;AAAA,gBAfJ,eAkBI,QAAC,WAAD;AAAa,UAAA,IAAI,EAAEP,IAAI,CAACO,EAAL,KAAYb,QAA/B;AAAyC,UAAA,OAAO,EAAE,MAAMC,WAAW,CAAC,IAAD,CAAnE;AAA2E,UAAA,OAAO,EAAC,cAAnF;AAAkG,UAAA,aAAa,EAAE,MAAMC,YAAY;AAAnI;AAAA;AAAA;AAAA;AAAA,gBAlBJ;AAAA,SAAiCI,IAAI,CAACO,EAAtC;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH;;GAzCQlB,I;;KAAAA,I;AAyCR;AAED,eAAeA,IAAf","sourcesContent":["import editIcon from '../../assests/lapis.svg';\r\nimport deleteIcon from '../../assests/lixeira.svg';\r\nimport HeaderList from './HeaderList';\r\nimport './style.css';\r\nimport { formate, formatDate, formarterWord } from '../../utils/formater';\r\nimport ModalDelete from '../ConfirmDelete';\r\nimport { useState } from 'react';\r\n\r\n\r\n\r\n\r\nfunction List({ transactions, setCurrentUser, setReload, reload }) {\r\n\r\n    const [idDelete, setIdDelete] = useState(null);\r\n\r\n    async function handleDelete() {\r\n        await fetch(`http://localhost:3333/transactions/${idDelete}`, {\r\n            method: 'DELETE'\r\n        });\r\n        setIdDelete(null);\r\n        setReload(!reload);\r\n    }\r\n\r\n    return (\r\n        <div className='table'><HeaderList />\r\n            <div className='table-body'>\r\n                {transactions.map((item) => (\r\n                    <div className='table-line' key={item.id}>\r\n                        <div className='line-items'>{formatDate(item.date)}</div>\r\n                        <div className='line-items'>{formarterWord(item.week_day)}</div>\r\n                        <div className='line-items'>{item.category}</div>\r\n                        <div\r\n                            className='line-items value-font'\r\n                            style={{ color: item.type === 'credit' ? ' #7B61FF' : '#FA8C10' }}\r\n                        >\r\n                            {formate(item.value)}\r\n\r\n                        </div>\r\n                        <div className='line-items'></div>\r\n                        <img src={editIcon} className='button-action'\r\n                            onClick={() => setCurrentUser(item)}\r\n                        />\r\n                        <img src={deleteIcon} className='button-action'\r\n                            onClick={() => setIdDelete(item.id)}\r\n                        />\r\n                        <ModalDelete show={item.id === idDelete} setShow={() => setIdDelete(null)} message='Apagar item?' handleConfirm={() => handleDelete()} />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n};\r\n\r\nexport default List;"]},"metadata":{},"sourceType":"module"}